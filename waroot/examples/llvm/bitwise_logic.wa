// Test the llvm backend.
// Test bitwise logic.

global a: i64 = 0x55555555
global b: i64 = 0x33333333
global c: i16 = 0x5555
global d: i16 = 0x3333
global e: u8 = 0x55
global f: u8 = 0x33

func main() {
	println("not ", 0x55555555, " = ", bw_not(0x55555555))
	println("not ", 0xaaaaaaaa, " = ", bw_not(0xaaaaaaaa))
	println(a, " and ", b, " = ", bw_and(a, b), "(", 0x11111111, ")")
	println(c, " or ", d, " = ", bw_or(c, d), "(", 0x7777, ")")
	println(e, " xor ", f, " = ", bw_xor(e, f), "(", 0x66, ")")
}

func bw_not(a: u32) => u32 {
	return ^a
}

func bw_and(a: i64, b: i64) => i64 {
	return a & b
}

func bw_or(a: i16, b: i16) => i16 {
	return a | b
}

func bw_xor(a: u8, b: u8) => u8 {
	return a ^ b
}

// 版权 @2023 凹语言 作者。保留所有权利。

func getCStr(b: []byte, start: i32) => string {
	var end: i32 = i32(len(b))
	for i := start; i < end; i++ {
		if b[i] == 0 {
			end = i32(i);
			break
		}
	}
	return string(b[start:end])
}

func os_get_args() => []string {
	var argc: i32
	var argv_buf_size: i32

	argsSizesGet(refToPtr_i32(&argc), refToPtr_i32(&argv_buf_size))
	if argc == 0 {
		return nil
	}

	var argvBytes = make([]byte, argc*4)
	var argvU32 = make([]u32, argc)

	var argv_buf = make([]byte, argv_buf_size)
	var argv_buf_ptr: i32 = refToPtr_byteSlice(argv_buf)

	argsGet(refToPtr_byteSlice(argvBytes), argv_buf_ptr)

	for i := 0; i < len(argvBytes); i += 4 {
		a0 := u32(argvBytes[i+0]);
		a1 := u32(argvBytes[i+1]);
		a2 := u32(argvBytes[i+2]);
		a3 := u32(argvBytes[i+3]);
		argvU32[i/4] = a0 + a1*256 + a2*256*256 + a3*256*256*256
	}

	var args = make([]string, argc)
	for i := 0; i < int(argc); i++ {
		var off = i32(argvU32[i]) - argv_buf_ptr
		args[i] = getCStr(argv_buf, off)
	}

	return args
}
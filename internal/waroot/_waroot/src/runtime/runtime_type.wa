// 版权 @2019 凹语言 作者。保留所有权利。
// 不要轻易修改本文件！
// Don't modify this file unless you know what you're doing!

type _type struct {
	size: u32
	hash: i32
	kind: u8
	align: u8
	flag: u16
	name: string
}

type _sptrType struct {
	_type
	elemType: uintptr  //@_type
	uncommon: uintptr  //@_uncommonType
}

type _arrayType struct {
	_type
	elemType: uintptr  //@_type
	cap:      uintptr
}

type _sliceType struct {
	_type
	elemType: uintptr  //@_type
}

type _structType struct {
	_type
	fieldCount: u32
}  //followed by [fieldCount]_structField

type _structField struct {
	name: string
	typ:  uintptr  //@_type
}

type _uncommonType struct {
	pkgName:     string
	methodCount: u32
}  //followed by [methodCount]_method

type _method struct {
	name:   string
	fnType: uintptr  //@_fntype
	fnID:   u32      //id for call_indirect
}

type _fnType struct {
	//_type  //Todo
	paramCount:  u32
	resultCount: u32
}  //followed by [paramCount]@_type + [resultCount]@_type

type _interfaceType struct {
	_type
	pkgName:     string
	methodCount: u32
}  //followed by [methodCount]_imethod

type _imethod struct {
	name:   string
	fnType: uintptr  //@_fntype
}

type _itab struct {
	dhash: i32  //hash of data's type
	ihash: i32  //hash of interface
}  //followed by [itype.methodCound]fnID, fnID=>id for call_indirect

#wa:linkname $wa.RT.getTypePtr
func getTypePtr(hash i32) uintptr {
	return 0
}

#wa:linkname $wa.RT.getItab
func getItab(dhash i32, ihash i32, commanok i32) u32 {
	itab := _itabsPtr + ((dhash - 1) * _interfaceCount - ihash - 1) * 4
	return getU32(u32(itab))
}

#wa:runtime_getter
func getU32(p: u32) => u32

#wa:linkname $wa.RT._itabsPtr
var _itabsPtr i32

#wa:linkname $wa.RT._interfaceCount
var _interfaceCount i32

#wa:linkname $wa.RT._concretTypeCount
var _concretTypeCount i32